# ################################
# Inference hparam file
# Authors:
# * Aur√©lien Marchal 2021
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1998
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/enc_dec/<seed>
save_folder: !ref <output_folder>/save

# Data files
inference_folder: ./inference_wavs/
json_path: !ref <inference_folder>/inference.json


transcribing: True

nb_command: 3
nb_prep: 8
nb_obj: 4

# kfold

k_fold: 5 # between 1 and 5

# Training parameters
number_of_epochs: 20
batch_size: 1


# Model parameters
activation: !name:torch.nn.LeakyReLU
encoder_dim: 256
emb_size: 128
dec_neurons: 512

# Features parametres
sample_rate: 16000
n_fft: 400
n_mels: 40

# Recording parametres
chunk: 1024
channels: 1
sample_format: !name:pyaudio.paInt16
seconds: 3
recording_file: !ref <inference_folder>/recording.wav

# Outputs
output_neurons: 17 # nb_command + nb_prep + nb_obj + bos + eos
bos_index: 0
eos_index: 1

# Decoding parametres
min_decode_ratio: 0.0
max_decode_ratio: 1.0
beam_size: 16
eos_threshold: 1.5

# Dataloader options

test_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: !ref <batch_size>


epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>


normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global


compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

enc: !new:speechbrain.nnet.containers.Sequential
    input_shape: [null, null, !ref <n_mels>]

    lstm: !new:speechbrain.nnet.RNN.LSTM
        input_size: !ref <n_mels>
        bidirectional: True
        hidden_size: !ref <encoder_dim>
        num_layers: 2
    
    linear: !new:speechbrain.nnet.linear.Linear
        input_size: !ref <encoder_dim> * 2
        n_neurons: !ref <encoder_dim>


emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
    enc_dim: !ref <encoder_dim>
    input_size: !ref <emb_size>
    rnn_type: gru
    attn_type: keyvalue
    hidden_size: !ref <dec_neurons>
    attn_dim: 512
    num_layers: 3
    scaling: 1.0
    dropout: 0.0


softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>

model: !new:torch.nn.ModuleList
    - [!ref <enc>, !ref <emb>, !ref <dec>, !ref <seq_lin>]


beam_searcher: !new:speechbrain.decoders.seq2seq.S2SRNNBeamSearcher
    embedding: !ref <emb>
    decoder: !ref <dec>
    linear: !ref <seq_lin>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <beam_size>



modules:
    enc: !ref <enc>
    emb: !ref <emb>
    dec: !ref <dec>
    softmax: !ref <softmax>
    seq_lin: !ref <seq_lin>
    normalize: !ref <normalize>


checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        counter: !ref <epoch_counter>


