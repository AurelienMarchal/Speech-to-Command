# ################################
# Model: wav2vec with emb and DNN
# Authors:
# * Aur√©lien Marchal 2021
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1998
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/enc_dec/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt


# Data files
data_folder: ./dataset/ # e.g. /path/to/data_set
rir_folder: !ref <data_folder> # Change it if needed
train_annotation: !ref <output_folder>/train.json
valid_annotation: !ref <output_folder>/dev.json
test_annotation: !ref <output_folder>/test.json
skip_prep: False # Skip data preparation
apply_data_augmentation: False # This makes cuda run out of memory for now

nb_command: 3
nb_prep: 8
nb_obj: 4


# kfold

k_fold: 5 # between 1 and 5

# Training parameters
number_of_epochs: 20
batch_size: 8
lr: 0.0003

sorting: ascending
auto_mix_prec: False


# Model parameters
activation: !name:torch.nn.LeakyReLU
encoder_dim: 256
emb_size: 128
dec_neurons: 512

# Features parametres
sample_rate: 16000
n_fft: 400
n_mels: 40


# Outputs
output_neurons: 17 # nb_command + nb_prep + nb_obj + bos + eos
bos_index: 0
eos_index: 1

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: !ref <batch_size>

valid_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: !ref <batch_size>

test_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: !ref <batch_size>

augment_wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [100]

augment_speed: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

add_rev: !new:speechbrain.lobes.augment.EnvCorrupt
    openrir_folder: !ref <rir_folder>
    openrir_max_noise_len: 3.0  # seconds
    reverb_prob: 1.0
    noise_prob: 0.0
    noise_snr_low: 0
    noise_snr_high: 15
    rir_scale_factor: 1.0

add_noise: !new:speechbrain.lobes.augment.EnvCorrupt
    openrir_folder: !ref <rir_folder>
    openrir_max_noise_len: 3.0  # seconds
    reverb_prob: 0.0
    noise_prob: 1.0
    noise_snr_low: 0
    noise_snr_high: 15
    rir_scale_factor: 1.0

add_rev_noise: !new:speechbrain.lobes.augment.EnvCorrupt
    openrir_folder: !ref <rir_folder>
    openrir_max_noise_len: 3.0  # seconds
    reverb_prob: 1.0
    noise_prob: 1.0
    noise_snr_low: 0
    noise_snr_high: 15
    rir_scale_factor: 1.0


augment_pipeline: [
    !ref <augment_wavedrop>,
    !ref <augment_speed>,
    !ref <add_rev>,
    !ref <add_noise>,
    !ref <add_rev_noise>
]


epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>


normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global


compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

enc: !new:speechbrain.nnet.containers.Sequential
    input_shape: [null, null, !ref <n_mels>]

    lstm: !new:speechbrain.nnet.RNN.LSTM
        input_size: !ref <n_mels>
        bidirectional: True
        hidden_size: !ref <encoder_dim>
        num_layers: 2
    
    linear: !new:speechbrain.nnet.linear.Linear
        input_size: !ref <encoder_dim> * 2
        n_neurons: !ref <encoder_dim>


emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
    enc_dim: !ref <encoder_dim>
    input_size: !ref <emb_size>
    rnn_type: gru
    attn_type: keyvalue
    hidden_size: !ref <dec_neurons>
    attn_dim: 512
    num_layers: 3
    scaling: 1.0
    dropout: 0.0


softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>

model: !new:torch.nn.ModuleList
    - [!ref <enc>, !ref <emb>, !ref <dec>, !ref <seq_lin>]


adam_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>


opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.000002


lr_annealing_adam: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0



modules:
    augment_wavedrop: !ref <augment_wavedrop>
    augment_speed: !ref <augment_speed>
    add_rev: !ref <add_rev>
    add_noise: !ref <add_noise>
    add_rev_noise: !ref <add_rev_noise>
    enc: !ref <enc>
    emb: !ref <emb>
    dec: !ref <dec>
    softmax: !ref <softmax>
    seq_lin: !ref <seq_lin>
    normalize: !ref <normalize>

# Cost + optimization
seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1


compute_error: !name:speechbrain.nnet.losses.classification_error

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        lr_annealing_adam: !ref <lr_annealing_adam>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>


seq_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.nll_loss
        label_smoothing: 0.1
        reduction: batch

